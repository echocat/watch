language: go
go:
  - 1.11.x
install: skip
os:
  - linux
services:
  - docker
env:
  global:
    - GO111MODULE=on
    - CGO_ENABLED=0
cache:
  directories:
    - $HOME/.cache/go-build
    - $HOME/gopath/pkg/mod
script: skip

jobs:
  include:
    - stage: test
      name: Run Tests
      script: |
        set -ex
        go test -v ./...

        export LDFLAGS="-X main.version=TEST${TRAVIS_BRANCH}TEST -X main.revision=TEST${TRAVIS_COMMIT}TEST -X main.built=`date -u +%Y-%m-%dT%H:%M:%SZ`"
        GOOS=linux   GOARCH=amd64 go build -ldflags "$LDFLAGS" -o dist/watch-linux-amd64       ./main

        dist/watch-linux-amd64 --version | grep " Version:    TEST${TRAVIS_BRANCH}TEST"
        dist/watch-linux-amd64 --version | grep " Revision:   TEST${TRAVIS_COMMIT}TEST"
    - stage: release
      name: Release
      if: tag =~ ^v\d+\.\d+\.\d+|snapshot-.+$
      before_script:
        - mkdir -p dist
      script: |
        set -ex
        export LDFLAGS="-X main.version={TRAVIS_BRANCH} -X main.revision={TRAVIS_COMMIT} -X main.built=`date -u +%Y-%m-%dT%H:%M:%SZ`"

        GOOS=linux   GOARCH=amd64 go build -ldflags "$LDFLAGS" -o dist/watch-linux-amd64       ./main
        GOOS=linux   GOARCH=386   go build -ldflags "$LDFLAGS" -o dist/watch-linux-386         ./main
        GOOS=darwin  GOARCH=amd64 go build -ldflags "$LDFLAGS" -o dist/watch-darwin-amd64      ./main
        GOOS=darwin  GOARCH=386   go build -ldflags "$LDFLAGS" -o dist/watch-darwin-386        ./main
        GOOS=windows GOARCH=amd64 go build -ldflags "$LDFLAGS" -o dist/watch-windows-amd64.exe ./main
        GOOS=windows GOARCH=386   go build -ldflags "$LDFLAGS" -o dist/watch-windows-386.exe   ./main
      deploy:
        provider: releases
        api_key: "$GITHUB_DEPLOY_TOKEN"
        file_glob: true
        file: dist/*
        skip_cleanup: true
        name: $TRAVIS_TAG
        on:
          tags: true